1 Ir a carpeta donde se creará el proyecto

2. Crear entorno virtual:
python -m venv venv

3. Activar entono virtual:
venv\Scripts\activate

4. Instalar dependencias asociadas al proyecto
pip install django djangorestframework psycopg2-binary django-cors-headers channels daphne python-decouple
- DJANGO: Framework de python para desarrollar apps webs
- DJANGORESTFRAMEWORK: Para crear apis rest.
- PSYCOPG2-BINARY: Adaptador de django para comunicarse con PostgreSQL.
- DJANGO-CORS-HEADERS: Permite que el front-end haga peticiones al back-end.
- CHANNELS: Permite manejar web sockets y protocolos asíncronos
- DAPHNE: Para ejecutar proyecto en entorno de producción
- PYTHON-DECOUPLE: Sirve para generar un archivo .env y no compartir información secreta en el GitHub

5. Librería faltante
pip install dj-database-url

6. Generar SECRET_KEY (Firma criptográficamente cookies y medidas de seguridad)
python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"

PD: Guardar SECRET_KEY para la configuración de python

7. Librería para el login
pip install djangorestframework-simplejwt
Un login con apis funciona mediante un sistema de tokens, donde el usuario envía su username y contraseña en el endpoint de la api,
si son correctas, el backend genera 2 tokens (access y refresh) y se los devuelve al usuario. El frontend guarda los tokens y para
acceder a rutas protegidas, el frontend debe de enviar el token de acceso en cada petición, y solo si este token es válido, se dan
los accesos solicitados.
La librería ya da "vistas" pre-hechas para generar y refrescar tokens, así que solo se necesita crear urls para consumirlas.














